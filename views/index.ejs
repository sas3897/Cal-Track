<html>
    <head>
        <script src="https://code.jquery.com/jquery-3.5.1.min.js" type='text/javascript'></script>
        <script src="common.js" type="text/javascript"></script>

        <link rel="stylesheet" href="bootstrap.min.css">
        <link rel="stylesheet" href="common.css">
        <style>
            .cal_table{
                display: table;
                border-spacing: 10px;
                border-collapse: separate;
            }
            .cal_cell_first{
                padding-left: 8px;
            }
            .cal_cell_first, .cal_cell_head, .cal_cell{
                display: table-cell;
            }
            .cal_cell_head, .cal_cell_first{
                font-weight: bolder;
            }
            .cal_row{
                display: table-row;
            }
            .cal_header{
                display: table-header-group;
            }
            .cal_body{
                display: table-row-group;
            }
            
            input.option_input{
                margin-right: 4px;
                margin-left: 24px;
            }
        </style>
    </head>

    <body>
        <div id="nav_bar_container">
        </div>

        <div id="left_container" style="width: 50%; float:left;">
            <div id="weights_container" style="height: 40%; margin-left: 16px; margin-top: 16px; ">
                <div id="timespan_options" style="margin-bottom:8px">
                    <label class="option_label" for="weekly">
                        <input class="option_input" type="radio" id="weekly" name="timespan" value="week"></input>
                        Past Week
                    </label>
                    <label class="option_label" for="monthly">
                        <input class="option_input" type="radio" id="monthly" name="timespan" value="month"></input>
                        Past Month
                    </label>
                    <label class="option_label" for="yearly">
                        <input class="option_input" type="radio" id="yearly" name="timespan" value="year"></input>
                        Past Year
                    </label>
                </div>
                <div id="weights_form">
                    <label for="weight_input">Enter today's weight:</label>
                    <div>
                        <input id="weight_input">
                        <input id="weight_submit_btn" type="submit" name="action" value="Enter weight">
                    </div>
                </div>
                <div id="weights_list" style="overflow: auto; height: 73%;">
                    <ul>
                    </ul>
                </div>
            </div>
            <div id="cal_entries_container" style="height: 60%; margin-left: 6px; margin-top: 16px;">
                <div id="cal_entries_table" class="cal_table">
                </div>
            </div>
        </div>

        <div id="right_container" style="width:50%; float:right;">
            <div style="margin: auto;width: 20%;text-align: center;min-width: auto;" class="alert alert-danger" id="warning_container">
                <% if(locals.err_msg){ %>
                <%= err_msg %>
                <% } %>
            </div>
            <script>
                if(<%= locals.err_msg === undefined %>){
                    $("#warning_container").hide();
                }
            </script>
            <div id="ingredients_options_container">
                <select id="ingredients_list">
                <% for( var i = 0; i < ingredients.length; i++){%>
                    <%var ingredient_name = ingredients[i].ingredient_name; %>
                    <option value="<%= ingredient_name%>"><%= ingredient_name%></option> 
                <% } %>
                </select>
                <input type="button" id="add_ingredient_btn" value="Add Ingredient"></input>
            </div>
            
            <div id="recipes_options_container">
                <select id="recipes_list">
                <% for( var i = 0; i < recipes.length; i++){%>
                    <%var recipe_name = recipes[i].recipe_name; %>
                    <option value="<%= recipe_name%>"><%= recipe_name%></option> 
                <% } %>
                </select>
                <input type="button" id="add_recipe_ings_btn" value="Add From Recipe"></input>
            </div>
            <div>
                <table>
                    <tbody id="ingredients_container">
                        <tr>
                            <th>Name</th>
                            <th>Unit</th>
                            <th>Amount</th>
                            <th>Calories</th>
                            <th>Fat</th>
                            <th>Carbs</th>
                            <th>Fiber</th>
                            <th>Protein</th>
                        </tr>
                    </tbody>
                    <tfoot id="totals_container"></tfoot>
                </table>
            </div>
            <div>
                <div style="width:100%">Any ingredients with amount 0 will not be included.</div>
                <input id="meal_name_input"></input>
                <input type="number" id="meal_weight_input"></input>
                <input type="submit" id="enter_meal_btn" name="action" value="Save to Fridge">
            </div>
            <input type="submit" id="one_off_btn" name="action" value="I Ate It!">
        </div>

        <div id="scripts_container">
            <script>
                $(document).ready(function(){
                    const nutrient_ids = ["calories", "fat", "carb", "fiber", "protein"]

                    const cal_header = '<div class="cal_header">' + 
                            '<div class="cal_row">' + 
                                '<div class="cal_cell_head">Time</div>' +
                                '<div class="cal_cell_head">Calories</div>' +
                                '<div class="cal_cell_head">Fat</div>' +
                                '<div class="cal_cell_head">Carbs</div>' +
                                '<div class="cal_cell_head">Fiber</div>' +
                                '<div class="cal_cell_head">Protein</div>' +
                            '</div>' +
                        '</div>';
                    let timespan_options = $("div[id='timespan_options'] input[name='timespan']");
                    let prev_timespan = '';
                    let starting_option = $("div[id='timespan_options'] input[value='week']");


                    //Add the ingredient to the list
                    $("#add_ingredient_btn").on('click', function(e){
                        add_ingredient(nutrient_ids);
                    });
                    

                    $("#ingredients_container").on('update', function(){
                        update_totals();
                    });

                    $("#add_recipe_ings_btn").on('click', function(e){
                        var recipe_name = $('select[id=recipes_list]').val();

                        $.ajax({
                            type: 'post',
                            url: '/get_recipe_ingredients',
                            data: {recipe_name: recipe_name},
                            dataType: 'json'
                        })
                        .done(function(ingredients_info){
                            //TODO load the recipe ingredients onto the page
                            console.log(ingredients_info);
                        });
                    });

                    function getNutrientTotals(){
                        let ingredient_rows = $("#ingredients_container tr");
                        //There's always a header row we have to ignore
                        //TODO replace this with a more elegant error message box
                        if(ingredient_rows.length <= 1){
                            alert("You need to have at least one ingredient!");
                            return;
                        }
                        
                        let nutrients_list = [
                            $("#calories_total").text(),
                            $("#fat_total").text(),
                            $("#carbs_total").text(),
                            $("#fiber_total").text(),
                            $("#protein_total").text()
                        ]

                        return nutrients_list;
                    }

                    $("#enter_meal_btn").on('click', function(evt){
                        let meal_name = $("#meal_name_input").val(); 
                        let meal_weight = $("#meal_weight_input").val();
                        //TODO replace this with a more elegant error message box
                        if(meal_name == "" || meal_weight == ""){
                            alert("You must provide a name and weight!");
                            return;
                        }
                        
                        $.ajax({
                            type: 'post',
                            url: '/add_meal',
                            data: {
                                meal_name: meal_name, 
                                meal_weight: parseFloat(meal_weight), 
                                nutrients: getNutrientTotals()
                            },
                            dataType: 'json'
                        })
                        .done(function(maybeError){
                            if(maybeError.err != ""){
                                let warning_container = $("#warning_container");
                                warning_container.text(maybeError.err);
                                warning_container.show();
                            }
                            else{
                                $("#warning_container").hide();
                            }
                        });

                    });

                    $("#one_off_btn").on('click', function(e){
                        $.ajax({
                            type: 'post',
                            url: '/enter_cal_entry',
                            data: {nutrients: getNutrientTotals()},
                            dataType: 'json'
                        })
                        .done(function(statusMsg){
                            if(statusMsg.status != "error"){
                                prev_timespan = '';
                                $("input[name='timespan']:checked").trigger('change');
                            }
                        });
                    });

                    $("#weight_submit_btn").on('click', function(e){
                        console.log('derp');
                        $.ajax({
                            type: 'post',
                            url: '/enter_weight',
                            data: {weight: $('#weight_input').val()},
                            dataType: 'json'
                        })
                        .done(function(statusMsg){
                            if(statusMsg.status != "error"){
                                prev_timespan = '';
                                $("input[name='timespan']:checked").trigger('change');
                            }
                        });
                    });

                    
                    timespan_options.on('change', function(evt){
                        let timespan_val = $(this).val();
                        let today = new Date();
                        let timespan_list = ["week", "month", "year"];
                        let timespan_date;

                        switch(timespan_val){
                            case "week":
                                //Eight days rather than seven because otherwise entries exactly one week ago are removed
                                timespan_date = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 8);
                                break;
                            case "month":
                                //TODO Breaks in Jan?
                                timespan_date = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate() - 1);
                                break;
                            case "year":
                                timespan_date = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate() - 1);
                                break;
                        }

                        //Cal-entries and weights
                        if(timespan_list.indexOf(timespan_val) < timespan_list.indexOf(prev_timespan)){
                            trim_list(timespan_date, "div[class='cal_body'] div[class*='cal_date_head']", "div[class='cal_body']");
                            trim_list(timespan_date, "div[id='weights_list'] strong", "li");
                        }
                        else{
                            get_cal_entries_for_timespan(timespan_date);
                            get_weights_for_timespan(timespan_date);
                        }
                        prev_timespan = timespan_val; 
                    });

                    function get_cal_entries_for_timespan(timespan_val){
                        let str_timespan = timespan_val.toJSON().replace("T", " ").replace("Z", "");
                        $.ajax({
                            type: 'post',
                            url: '/get_calorie_entries',
                            data: {timespan: str_timespan},
                            dataType: 'json'
                        })
                        .done(function(cal_entries_list){
                            let cal_entries_table = $("div[id='cal_entries_table']");
                            let prev_date = "";
                            let new_list_html = "";
                            let nutrients_list = {'calories': 0, 'fat': 0, 'carb': 0, 'fiber': 0, 'protein': 0};

                            for(let entry of cal_entries_list){
                                if(entry.dt != prev_date){
                                    if(prev_date != ""){
                                        new_list_html += `<div class='totals cal_row'>` + 
                                            `<div class='cal_cell_first'>Total:</div>` +
                                            `<div class='cal_cell'>${nutrients_list.calories}</div>` +
                                            `<div class='cal_cell'>${nutrients_list.fat}</div>` +
                                            `<div class='cal_cell'>${nutrients_list.carb}</div>` +
                                            `<div class='cal_cell'>${nutrients_list.fiber}</div>` +
                                            `<div class='cal_cell'>${nutrients_list.protein}</div>` +
                                            `</div></div>`;
                                    }
                                    new_list_html += `<div class='cal_body'><div class='cal_row'><div class='cal_date_head cal_cell'>${entry.dt}</div></div>`;
                                    
                                    prev_date = entry.dt;
                                    nutrients_list = {'calories': 0, 'fat': 0, 'carb': 0, 'fiber': 0, 'protein': 0};
                                }
                                new_list_html += `<div class='cal_row'>` + 
                                    `<div class='cal_cell_first'>${entry.tm}</div>` +
                                    `<div class='cal_cell'>${entry.calories}</div>` +
                                    `<div class='cal_cell'>${entry.fat}</div>` +
                                    `<div class='cal_cell'>${entry.carb}</div>` +
                                    `<div class='cal_cell'>${entry.fiber}</div>` +
                                    `<div class='cal_cell'>${entry.protein}</div>` +
                                    `</div>`;

                                nutrients_list['calories'] += entry.calories;
                                nutrients_list['fat'] += entry.fat;
                                nutrients_list['carb'] += entry.carb;
                                nutrients_list['fiber'] += entry.fiber;
                                nutrients_list['protein'] += entry.protein;
                            }
                            new_list_html += `<div class='totals cal_row'>` + 
                                `<div class='cal_cell_first'>Total:</div>` +
                                `<div class='cal_cell'>${nutrients_list.calories}</div>` +
                                `<div class='cal_cell'>${nutrients_list.fat}</div>` +
                                `<div class='cal_cell'>${nutrients_list.carb}</div>` +
                                `<div class='cal_cell'>${nutrients_list.fiber}</div>` +
                                `<div class='cal_cell'>${nutrients_list.protein}</div>` +
                                `</div></div>`;

                            cal_entries_table.html(cal_header + new_list_html);
                        });
                    }

                    function get_weights_for_timespan(timespan_val){
                        let str_timespan = timespan_val.toJSON().replace("T", " ").replace("Z", "");
                        $.ajax({
                            type: 'post',
                            url: '/get_weights',
                            data: {timespan: str_timespan},
                            dataType: 'json'
                        })
                        .done(function(weights_list){
                            let weights_ele_list = $("div[id='weights_list']");
                            let new_list_html = "<ul>"

                            for(let entry of weights_list){
                                new_list_html += `<li><strong>${entry.entry_date}</strong>: ${entry.weight} lb.</li>`
                            }
                            new_list_html += "</ul>"
                            weights_ele_list.html(new_list_html);
                        });
                    }

                    function trim_list(date, ele_loc, parent_loc){
                        //This gets just the date portion
                        $(ele_loc).each(function(){
                                let entry_date = new Date($(this).text());
                                if(entry_date < date){
                                    //The cal-body div
                                    $(this).closest(parent_loc).remove();
                                }
                            });
                    }

                    starting_option.prop("checked", true);
                    starting_option.trigger('change');
                });
            </script>
        </div>
    </body>
</html>
